import {
  GreaterThanOrEqual,
  type SwapActionParams,
} from '@rabbitholegg/questdk'
import {
  type TestParams,
  createTestCase,
} from '@rabbitholegg/questdk-plugin-utils'
import { parseEther, zeroAddress } from 'viem'

export const ETH_FOR_TOKENS: TestParams<SwapActionParams> = {
  transaction: {
    chainId: 8453,
    from: '0x1e7fc21f03a9859b9f4d841b735e5b3508715f97',
    hash: '0x553c5ab29791da1e5b8beb9aaebd517849c06f23356b3188f809062a65472157',
    input:
      '0x903638a40000000000000000000000000000000000000000000000000000000000385d5900000000000000000000000000000000000000000000000000000000000000800000000000000000000000001e7fc21f03a9859b9f4d841b735e5b3508715f970000000000000000000000000000000000000000000000000000000065ee56770000000000000000000000000000000000000000000000000000000000000003000000000000000000000000420000000000000000000000000000000000000600000000000000000000000054bc229d1cb15f8b6415efeab4290a40bc8b7d840000000000000000000000000000000000000000000000000000000000000000000000000000000000000000420dd381b31aef6683db6b902084cb0ffece40da00000000000000000000000054bc229d1cb15f8b6415efeab4290a40bc8b7d84000000000000000000000000940181a94a35a4569e4529a3cdfb74e38fd986310000000000000000000000000000000000000000000000000000000000000000000000000000000000000000420dd381b31aef6683db6b902084cb0ffece40da000000000000000000000000940181a94a35a4569e4529a3cdfb74e38fd98631000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bda029130000000000000000000000000000000000000000000000000000000000000000000000000000000000000000420dd381b31aef6683db6b902084cb0ffece40da',
    to: '0xcf77a3ba9a5ca399b7c97c74d54e5b1beb874e43',
    value: '952336671958473',
  },
  params: {
    chainId: 8453,
    amountIn: GreaterThanOrEqual(900000000000000),
    tokenIn: '0x0000000000000000000000000000000000000000',
    tokenOut: '0x833589fcd6edb6e08f4c7c32d4f71b54bda02913',
    amountOut: GreaterThanOrEqual(1),
  },
}
export const TOKENS_FOR_ETH: TestParams<SwapActionParams> = {
  transaction: {
    chainId: 8453,
    from: '0xfd093ce753d5bab4ec02c1fc93574e36858e4b9d',
    hash: '0x9af9f272fbf6ecde7e58f3f16f851b51c60cef84e24bde7b77e0d4640835463a',
    input:
      '0xc6b7f1b6000000000000000000000000000000000000000000000000000000000044aa2000000000000000000000000000000000000000000000000000042b28f422b80b00000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000fd093ce753d5bab4ec02c1fc93574e36858e4b9d0000000000000000000000000000000000000000000000000000000065ee57920000000000000000000000000000000000000000000000000000000000000002000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bda02913000000000000000000000000940181a94a35a4569e4529a3cdfb74e38fd986310000000000000000000000000000000000000000000000000000000000000001000000000000000000000000420dd381b31aef6683db6b902084cb0ffece40da000000000000000000000000940181a94a35a4569e4529a3cdfb74e38fd9863100000000000000000000000042000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000000000001000000000000000000000000420dd381b31aef6683db6b902084cb0ffece40da',
    to: '0xcf77a3ba9a5ca399b7c97c74d54e5b1beb874e43',
    value: '0',
  },
  params: {
    chainId: 8453,
    amountIn: GreaterThanOrEqual(4000000),
    tokenIn: '0x833589fcd6edb6e08f4c7c32d4f71b54bda02913',
    tokenOut: '0x0000000000000000000000000000000000000000',
    amountOut: GreaterThanOrEqual(1),
  },
}
export const TOKENS_FOR_TOKENS: TestParams<SwapActionParams> = {
  transaction: {
    chainId: 8453,
    from: '0x182db652de873f2e6be9b384a2b69640204b0f06',
    hash: '0xd3a8f0d830d3f43db6ab70ee36c20b34dca587358cabc7d8c083f3d630b8b5f8',
    input:
      '0xcac88ea90000000000000000000000000000000000000000000000000000000000553a000000000000000000000000000000000000000000000000004dd9f4eb80c0a76200000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000182db652de873f2e6be9b384a2b69640204b0f060000000000000000000000000000000000000000000000000000000065ee57ff0000000000000000000000000000000000000000000000000000000000000003000000000000000000000000833589fcd6edb6e08f4c7c32d4f71b54bda02913000000000000000000000000940181a94a35a4569e4529a3cdfb74e38fd986310000000000000000000000000000000000000000000000000000000000000001000000000000000000000000420dd381b31aef6683db6b902084cb0ffece40da000000000000000000000000940181a94a35a4569e4529a3cdfb74e38fd98631000000000000000000000000d9aaec86b65d86f6a7b5b1b0c42ffa531710b6ca0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000420dd381b31aef6683db6b902084cb0ffece40da000000000000000000000000d9aaec86b65d86f6a7b5b1b0c42ffa531710b6ca00000000000000000000000050c5725949a6f0c72e6c4a641f24049a917db0cb0000000000000000000000000000000000000000000000000000000000000001000000000000000000000000420dd381b31aef6683db6b902084cb0ffece40da',
    to: '0xcf77a3ba9a5ca399b7c97c74d54e5b1beb874e43',
    value: '0',
  },
  params: {
    chainId: 8453,
    amountIn: GreaterThanOrEqual(5000000),
    tokenIn: '0x833589fcd6edb6e08f4c7c32d4f71b54bda02913',
    tokenOut: '0x50c5725949a6f0c72e6c4a641f24049a917db0cb',
    amountOut: GreaterThanOrEqual(1),
  },
}

export const SWAP_ETH_V3: TestParams<SwapActionParams> = {
  transaction: {
    chainId: 8453,
    from: '0x27aad9a045beefb5d177cf48882156b0142b9146',
    hash: '0x352bf30fd2ad5c472fcd68288df194fb772256cf64bb9bd62ea9adc1aaf839ab',
    input:
      '0x24856bc30000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000000008000000000000000000000000000000000000000000000000000000000000000020b080000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000000000000000000000000000000000000000000040000000000000000000000000f07835bbf6eea0d05392fb4d3b9e5a333ca4da2a000000000000000000000000000000000000000000000000016345785d8a0000000000000000000000000000000000000000000000000000000000000000018000000000000000000000000027aad9a045beefb5d177cf48882156b0142b9146000000000000000000000000000000000000000000000000016345785d8a00000000000000000000000000000000000000000000000000000000000012c3ed4a00000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000004200000000000000000000000000000000000006000000000000000000000000d9aaec86b65d86f6a7b5b1b0c42ffa531710b6ca0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d9aaec86b65d86f6a7b5b1b0c42ffa531710b6ca000000000000000000000000b79dd08ea68a908a97220c76d19a6aa9cbde43760000000000000000000000000000000000000000000000000000000000000001',
    to: '0xf07835bbf6eea0d05392fb4d3b9e5a333ca4da2a',
    value: '100000000000000000',
  },
  params: {
    chainId: 8453,
    amountIn: GreaterThanOrEqual(100000000000000000n),
    tokenIn: zeroAddress,
  },
}

export const SWAP_ERC20_V3: TestParams<SwapActionParams> = {
  transaction: {
    chainId: 8453,
    from: '0x229fb2393c7bacdfd32c828f3afa3b8836bc0c48',
    hash: '0xd4214e6a0acbe8767d9389ed8fc35696dd319f3f3d640823613f292e1efabf6e',
    input:
      '0x24856bcf07835bbf6eea0d05392fb4d3b9e5a333ca4da2a000000000000000000000000000000000000000000000000b469471f80140000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000010000000000000000000000000000000000000000000000000000000000000001000000000000000000000000940181a94a35a4569e4529a3cdfb74e38fd98631000000000000000000000000ac1bd2486aaf3b5c0fc3fd868558b082a531b2b400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000120000000000000000000000000229fb2393c7bacdfd32c828f3afa3b8836bc0c4880000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d16a5200000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000042ac1bd2486aaf3b5c0fc3fd868558b082a531b2b40000c84200000000000000000000000000000000000006000064833589fcd6edb6e08f4c7c32d4f71b54bda02913000000000000000000000000000000000000000000000000000000000000',
    to: '0xf07835bbf6eea0d05392fb4d3b9e5a333ca4da2a',
    value: '0',
  },
  params: {
    chainId: 8453,
    amountIn: GreaterThanOrEqual(13000000000000000000n),
    tokenIn: '0x940181a94A35A4569E4529A3CDfB74e38FD98631',
  },
}

export const passingTestCases = [
  createTestCase(ETH_FOR_TOKENS, 'when using swapExactETHForTokens'),
  createTestCase(TOKENS_FOR_ETH, 'when using swapExactTokensForETH'),
  createTestCase(TOKENS_FOR_TOKENS, 'when using swapExactTokensForTokens'),
  createTestCase(SWAP_ETH_V3, 'when using ETH V3'),
  createTestCase(SWAP_ERC20_V3, 'when using ERC20 V3'),
  createTestCase(ETH_FOR_TOKENS, 'when using tokenIn is "Any"', {
    tokenIn: undefined,
  }),
  createTestCase(TOKENS_FOR_TOKENS, 'when using tokenOut is "Any"', {
    tokenOut: undefined,
  }),
  createTestCase(TOKENS_FOR_TOKENS, 'when using amountIn is "Any"', {
    amountIn: undefined,
  }),
]

export const failingTestCases = [
  createTestCase(ETH_FOR_TOKENS, 'when chainId is not correct', { chainId: 0 }),
  createTestCase(TOKENS_FOR_ETH, 'when tokenIn is not correct', {
    tokenIn: '0x6982508145454ce325ddbe47a25d4ec3d2311933',
  }),
  createTestCase(TOKENS_FOR_TOKENS, 'when tokenOut is not correct', {
    tokenOut: '0x6982508145454ce325ddbe47a25d4ec3d2311933',
  }),
  createTestCase(ETH_FOR_TOKENS, 'when amountIn is insufficient using ETH', {
    amountIn: GreaterThanOrEqual(parseEther('1000000000')),
  }),
  createTestCase(TOKENS_FOR_ETH, 'when amountIn is insufficient using tokens', {
    amountIn: GreaterThanOrEqual(parseEther('1000000000')),
  }),
]
